#!/usr/bin/env python
# -*- coding: utf-8 -*-
'''
 @Author:      howardhhm
 @Email:       howardhhm@126.com
 @DateTime:    2017-03-18 09:51:16
 @Description: Description
'''

# import pip
import os
from subprocess import call
import sys

# call("pip list --outdated --format=columns", shell=True)

numArgs = len(sys.argv)
listValidArgs = {
    "help": ["-h", "--help"],
    "list": ["-l", "--list"],
    "update": ["-u", "--update"],
    "user": ["--user"]
}
listCmdArg = {
    "list": ["-l", "--list"],
    "update": ["-u", "--update"]
}

flagValidArgs = {}
for arg in listValidArgs.keys():
    flagValidArgs[arg] = False
    for x in xrange(1, len(sys.argv)):
        if sys.argv[x] in listValidArgs[arg]:
            flagValidArgs[arg] = True
            break

flagCmdArgs = {}
for arg in listCmdArg.keys():
    flagCmdArgs[arg] = False
    for x in xrange(1, len(sys.argv)):
        if sys.argv[x] in listCmdArg[arg]:
            flagCmdArgs[arg] = True
            break

if (len(sys.argv) == 1):
    flagValidArgs["help"] = True

count = 0
for x in flagCmdArgs.keys():
    if flagCmdArgs[x]:
        count = count + 1
if count == 0:
    flagValidArgs["help"] = True
    # print(" " * 5 + "Please check your parameters!")

if flagValidArgs["help"]:
    print("Description:")
    print(" " * 5 + "A script to update pip package.")
    print("Options:")
    print(" " * 5 + "--help     -h     list all available parameters")
    print(" " * 5 + "--list     -l     list all updatable packages")
    print(" " * 5 + "--user            update user packages")
    print(" " * 5 + "--update   -u     update all available packages")
    print("Tips:")
    print(" " * 3 + "useful command")
    print(" " * 5 + "pip install --upgrade [--user] packagename")
    print(" " * 3 + "package bugs")
    print(" " * 5 + "keep ipython 5.3.0 or you need lastest python")
    print(" " * 5 + "pip install ipython==5.3.0 [--user]")
    print(" " * 5 + "keep html5lib 0.999999")
    sys.exit()

if flagValidArgs["user"]:
    cmdline = 'pip list --outdated --format=columns --user'
    updatestr = "pip install --upgrade --user "
else:
    cmdline = 'pip list --outdated --format=columns'
    updatestr = "pip install --upgrade "

packages = os.popen(cmdline).readlines()
outdated = []
for package in packages:
    print package.strip('\n')
    outdated.append(package.split(' ')[0])

outdated = outdated[2:]
if len(outdated) > 0:
    if flagValidArgs["update"]:
        print
        for dist in outdated:
            call(updatestr + dist, shell=True)
else:
    print "All packages are lastest!"
